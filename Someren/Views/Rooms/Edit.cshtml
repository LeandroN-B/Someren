@model Someren.Models.Room

@{
    ViewData["Title"] = "Edit Room";
}

<!-- Page container -->
<div class="container mt-5">
    <!-- Card wrapper -->
    <div class="card border border-primary border-3 rounded-4">
        <!-- Card header with title -->
        <div class="card-header bg-primary text-white rounded-top-4">
            <h1 class="mb-0">Edit Room</h1>
        </div>

        <!-- Card body with form content -->
        <div class="card-body">
            <!-- Submit form to Edit action -->
            <form asp-action="Edit" method="POST">
                <!-- Hidden RoomID -->
                <input type="hidden" asp-for="RoomID" />

                <!-- First row: Room number and Room type -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="fw-bold" asp-for="RoomNumber">Room Number:</label>
                        <input type="text" asp-for="RoomNumber" class="form-control" required />
                    </div>
                    <div class="col-md-6">
                        <label class="fw-bold" asp-for="RoomType">Room Type:</label>
                        <select asp-for="RoomType" class="form-control" required>
                            <option value="Single" selected="@(Model.RoomType == RoomType.Single)">Single</option>
                            <option value="Dormitory" selected="@(Model.RoomType == RoomType.Dormitory)">Dormitory</option>
                        </select>
                    </div>
                </div>

                <!-- Second row: Capacity, Floor, Building -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label class="fw-bold" asp-for="Capacity">Capacity:</label>
                        <!-- Capacity input is read-only and auto-set via JavaScript -->
                        <input type="number" asp-for="Capacity" id="capacityInput" class="form-control" required min="1" max="8" readonly />
                    </div>
                    <div class="col-md-4">
                        <label class="fw-bold" asp-for="Floor">Floor:</label>
                        <input type="number" asp-for="Floor" class="form-control" required />
                    </div>
                    <div class="col-md-4">
                        <label class="fw-bold" asp-for="Building">Building:</label>
                        <select asp-for="Building" class="form-control" required>
                            <option value="A" selected="@(Model.Building == BuildingType.A)">Building A</option>
                            <option value="B" selected="@(Model.Building == BuildingType.B)">Building B</option>
                        </select>
                    </div>
                </div>

                <!-- Show who is currently in the room -->
                <div class="mb-3">
                    <label class="fw-bold">Currently Occupied By:</label>

                    @if (Model.RoomType == RoomType.Single && Model.Lecturer != null)
                    {
                        <input type="text" class="form-control mb-2" readonly value="Lecturer: @Model.Lecturer.FullName" />
                    }
                    else if (Model.RoomType == RoomType.Dormitory && Model.Students != null && Model.Students.Any())
                    {
                        @foreach (Student student in Model.Students)
                        {
                            <input type="text" class="form-control mb-2" readonly value="@student.FirstName @student.LastName (@student.StudentNumber)" />
                        }
                    }
                    else
                    {
                        <input type="text" class="form-control" readonly value="Unoccupied" />
                    }
                </div>

                <!-- Form buttons -->
                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Go Back to Room List
                    </a>
                    <button type="submit" class="btn btn-success px-4">
                        <i class="bi bi-check-lg"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Scripts section for auto capacity logic -->
@section Scripts {
    <script>
        const roomTypeSelect = document.querySelector('[name="RoomType"]');
        const capacityInput = document.getElementById('capacityInput');

        function updateCapacity() {
            const selected = roomTypeSelect.value;
            capacityInput.value = selected === 'Single' ? 1 : 8;
        }

        // Listen to room type changes
        roomTypeSelect.addEventListener('change', updateCapacity);

        // Set correct capacity on page load
        updateCapacity();
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
